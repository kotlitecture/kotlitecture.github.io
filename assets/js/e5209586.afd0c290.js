"use strict";(self.webpackChunkkotli_docs=self.webpackChunkkotli_docs||[]).push([[207],{6495:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var n=i(4848),s=i(8453);const r={sidebar_position:4,title:"Template Structure"},a=void 0,o={id:"engine/template",title:"Template Structure",description:"Each Kotli Template is a self-contained Kotlin artifact that encompasses all the necessary metadata for presentation and facilitates the multistep process of generating an output structure.",source:"@site/docs/engine/template.md",sourceDirName:"engine",slug:"/engine/template",permalink:"/engine/template",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Template Structure"},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/engine/architecture"}},l={},c=[{value:"Template",id:"template",level:2},{value:"Processor",id:"processor",level:2},{value:"Examples",id:"examples",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Each ",(0,n.jsx)(t.strong,{children:"Kotli Template"})," is a self-contained Kotlin artifact that encompasses all the necessary metadata for presentation and facilitates the multistep process of generating an output structure."]}),"\n",(0,n.jsx)(t.mermaid,{value:"graph TD\n   P[Processor]\n   T[Template]\n   KT[Kotli Template]\n   \n   P --\x3e KT\n   T --\x3e KT"}),"\n",(0,n.jsxs)(t.p,{children:["It comprises ",(0,n.jsx)(t.code,{children:"Template"})," and ",(0,n.jsx)(t.code,{children:"Processor"})]}),"\n",(0,n.jsx)(t.h2,{id:"template",children:"Template"}),"\n",(0,n.jsxs)(t.p,{children:['It serves as the initial blueprint for a project template structure without any limitations.\nThe structure can be written in any language, and technically, it doesn\'t even have to be a "project".\nThe crucial aspect is that this template is utilized by the ',(0,n.jsx)(t.code,{children:"Processor"})," to generate the resulting structure."]}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsx)(t.p,{children:"It is recommended for this structure to be a functional example of a project, importable into an IDE as-is for testing and modification purposes."})}),"\n",(0,n.jsx)(t.h2,{id:"processor",children:"Processor"}),"\n",(0,n.jsx)(t.p,{children:"The initial blueprint template can include many dependencies and implement a ton of functionality, which usually is not needed by everyone."}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"Processor"})," serves two goals:"]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Include only the required features into the output structure."}),"\n",(0,n.jsxs)(t.li,{children:["Provide any third-party solution that utilizes the artifact with all the required metadata describing the ",(0,n.jsx)(t.code,{children:"processor"}),"."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.p,{children:"Before delving deep into the details, it is recommended to check how existing templates look. Here are some examples:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Android Compose Application - ",(0,n.jsx)(t.a,{href:"https://github.com/kotlitecture/template-android-compose",children:"https://github.com/kotlitecture/template-android-compose"})]}),"\n",(0,n.jsxs)(t.li,{children:["Spring Boot Application - ",(0,n.jsx)(t.a,{href:"https://github.com/kotlitecture/template-backend-spring-boot",children:"https://github.com/kotlitecture/template-backend-spring-boot"})]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);